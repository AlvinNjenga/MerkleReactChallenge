{"version":3,"sources":["components/Input/Input.js","components/List/BasketTotal.js","components/List/ListItem.js","components/List/List.js","components/Submit/Buttons.js","components/Submit/Success.js","components/helpers/HelperFunc.js","App.js","serviceWorker.js","index.js"],"names":["Input","_this","this","addItem","props","react_default","a","createElement","className","onSubmit","e","newItem","value","type","placeholder","ref","input","React","Component","BasketTotal","_ref","total","ListItem","item","alterQuantity","Object","keys","onClick","values","List","items","length","map","List_ListItem","key","Buttons","placeOrder","clearBasket","Success","orderPlaced","orderFailed","capitalFirstLetter","str","concat","toLowerCase","split","toUpperCase","slice","pluraliseUnit","number","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","preventDefault","_this$state","state","totalNo","capitalInput","i","cloneState","toConsumableArray","setState","defineProperty","alter","_this$state2","toString","splice","printOrder","console","log","orderConsole","listOrder","setTimeout","Bread","Milk","bind","assertThisInitialized","components_Input_Input","List_BasketTotal","components_List_List","Submit_Buttons","Submit_Success","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAmBeA,mLAfH,IAAAC,EAAAC,KACEC,EAAYD,KAAKE,MAAjBD,QACN,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBC,SAAU,SAACC,GAAOP,EAAQO,EAAGT,EAAKU,QAAQC,OAAQX,EAAKU,QAAQC,MAAQ,KACtGP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOL,UAAU,eAAeM,YAAY,iBAAiBC,IAAK,SAAAC,GAAK,OAAIf,EAAKU,QAAUK,MAE1GX,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,gCAAhC,qBAVAS,IAAMC,WCQXC,EARK,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MAClB,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,8BAAsBc,MCiBnDC,EApBE,SAAAF,GAAkC,IAAhCG,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,cAAeZ,EAAWQ,EAAXR,MAEpC,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYiB,OAAOC,KAAKH,IAClClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BACdmB,QAAS,kBAAMH,EAAcZ,EAAO,cAAaP,EAAAC,EAAAC,cAAA,eACrDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaiB,OAAOG,OAAOL,IAC1ClB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BACdmB,QAAS,kBAAMH,EAAcZ,EAAO,cAAaP,EAAAC,EAAAC,cAAA,eACrDF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BACdmB,QAAS,kBAAMH,EAAcZ,EAAO,WAAUP,EAAAC,EAAAC,cAAA,mBCSvDsB,EArBF,SAAAT,GAA4B,IAA1BU,EAA0BV,EAA1BU,MAAON,EAAmBJ,EAAnBI,cAElB,OAAGM,EAAMC,QAAU,EAEXD,EAAME,IAAI,SAACT,GACP,OAAOlB,EAAAC,EAAAC,cAAC0B,EAAD,CACHC,IAAKT,OAAOC,KAAKH,GAAM,GACvBA,KAAMA,EACNC,cAAeA,EACfZ,MAAOa,OAAOC,KAAKH,GAAM,OAKjClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,iCCHD2B,EAbC,SAAAf,GAAuC,IAArCgB,EAAqChB,EAArCgB,WAAYL,EAAyBX,EAAzBW,OAAQM,EAAiBjB,EAAjBiB,YAClC,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAChBmB,QAAS,kBAAMS,EAAWL,KAD5B,eAEE1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAClBmB,QAAS,kBAAMU,MADf,YCcDC,EApBC,SAAAlB,GAAgC,IAA9BmB,EAA8BnB,EAA9BmB,YAAaC,EAAiBpB,EAAjBoB,YAC3B,OAAmB,IAAhBD,EAEKlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,uDAGc,IAAhBgC,EAEFnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,mDAKJH,EAAAC,EAAAC,cAAA,aCXL,SAASkC,EAAmBC,GAC/B,SAAAC,OAAUD,EAAIE,cAAcC,MAAM,IAAI,GAAGC,eAAzCH,OAAyDD,EAAIK,MAAM,GAAGH,eASlE,SAASI,EAAcC,EAAQ1B,GACnC,OAAO0B,EAAS,EAAT,MAAAN,OAAmBM,EAAnB,cAAAN,OAAsCpB,EAAtC,YAAAoB,OACDM,EADC,aAAAN,OACiBpB,EADjB,gBCqKI2B,cA3Kb,SAAAA,IAAa,IAAAjD,EAAA,OAAAwB,OAAA0B,EAAA,EAAA1B,CAAAvB,KAAAgD,IACXjD,EAAAwB,OAAA2B,EAAA,EAAA3B,CAAAvB,KAAAuB,OAAA4B,EAAA,EAAA5B,CAAAyB,GAAAI,KAAApD,QAoBFC,QAAU,SAACO,EAAGM,GAEZ,GADAN,EAAE6C,iBACEvC,EAAJ,CAKA,IAPsB,IAAAwC,EAIGvD,EAAKwD,MAAxB3B,EAJgB0B,EAIhB1B,MAAO4B,EAJSF,EAITE,QACTC,EAAelB,EAAmBzB,GAE9B4C,EAAE,EAAGA,EAAI9B,EAAMC,OAAQ6B,IAAI,CACjC,IAAIC,EAAUpC,OAAAqC,EAAA,EAAArC,CAAOK,GAGrB,GAAG6B,IAFQlB,EAAmBhB,OAAOC,KAAKI,EAAM8B,IAAI,IAQlD,OALAC,EAAWD,GAAGD,IAAiB,OAE/B1D,EAAK8D,SAAS,CACZjC,MAAO+B,IAMb5D,EAAK8D,SAAS,CACZjC,MAAK,GAAAa,OAAAlB,OAAAqC,EAAA,EAAArC,CACAxB,EAAKwD,MAAM3B,OADX,CAAAL,OAAAuC,EAAA,EAAAvC,CAAA,GAEDkC,EAAe,KAEnBD,QAASA,EAAU,MA/CVzD,EAqDbuB,cAAgB,SAACZ,EAAOqD,GAAU,IAAAC,EACPjE,EAAKwD,MAAxB3B,EAD0BoC,EAC1BpC,MAAO4B,EADmBQ,EACnBR,QACTG,EAAUpC,OAAAqC,EAAA,EAAArC,CAAOK,GAErB,GAAc,aAAVmC,EACF,IAAI,IAAIL,EAAG,EAAGA,EAAIC,EAAW9B,OAAQ6B,IAAI,CAC5BnC,OAAOC,KAAKmC,EAAWD,IAAIO,aAE1BvD,IACViD,EAAWD,GAAGhD,IAAU,QAIvB,GAAc,aAAVqD,EACT,IAAI,IAAIL,EAAG,EAAGA,EAAIC,EAAW9B,OAAQ6B,IAAI,CAC5BnC,OAAOC,KAAKmC,EAAWD,IAAIO,aAE1BvD,IACViD,EAAWD,GAAGhD,IAAU,EACpBiD,EAAWD,GAAGhD,GAAS,IACzBiD,EAAWO,OAAOR,EAAG,GACrB3D,EAAK8D,SAAS,CAACL,QAASA,EAAU,WAKnC,GAAc,UAAVO,EACT,IAAI,IAAIL,EAAG,EAAGA,EAAIC,EAAW9B,OAAQ6B,IAAI,CAC5BnC,OAAOC,KAAKmC,EAAWD,IAAIO,aAE1BvD,IACViD,EAAWO,OAAOR,EAAG,GAErB3D,EAAK8D,SAAS,CACZjC,MAAO+B,EACPH,QAASA,EAAU,KAM3BzD,EAAK8D,SAAS,CACZjC,MAAO+B,KA/FE5D,EAmGboE,WAAa,WAAM,IACXvC,EAAU7B,EAAKwD,MAAf3B,MAeNwC,QAAQC,IAAI,kDAdI,SAACzC,GAGf,IAFF,IAAI0C,EAAe,GAETZ,EAAI,EAAGA,EAAI9B,EAAMC,OAAQ6B,IAM/BY,GADoBxB,EAJPvB,OAAOG,OAAOE,EAAM8B,IACtBnC,OAAOC,KAAKI,EAAM8B,IAAIO,WAAWvB,eAM9C,OAAO4B,EAGuDC,CAAU3C,GAAS,sCAEnF7B,EAAK8D,SAAS,CACZxB,aAAa,KAtHJtC,EA0HbmC,WAAa,SAACL,GACZ2C,WAAW,WACL3C,EAAS,EACX9B,EAAKoE,cAELC,QAAQC,IAAI,mDACZtE,EAAK8D,SAAS,CACZvB,aAAa,EACbD,aAAa,MAGhB,OArIQtC,EAwIboC,YAAc,WACZpC,EAAK8D,SAAS,CACZjC,MAAO,GACP4B,QAAS,KAxIXzD,EAAKwD,MAAQ,CACX3B,MAAO,CACL,CAAC6C,MAAS,GACV,CAACC,KAAQ,IAEXlB,QAAS,EACTnB,aAAa,EACbC,aAAa,GAEfvC,EAAKE,QAAUF,EAAKE,QAAQ0E,KAAbpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAxB,KACfA,EAAKoE,WAAapE,EAAKoE,WAAWQ,KAAhBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAxB,KAClBA,EAAKmC,WAAanC,EAAKmC,WAAWyC,KAAhBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAxB,KAClBA,EAAKuB,cAAgBvB,EAAKuB,cAAcqD,KAAnBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAxB,KACrBA,EAAKoC,YAAcpC,EAAKoC,YAAYwC,KAAjBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAxB,KAhBRA,mFAgJX,IAAIoB,EAAQnB,KAAKuD,MAAM3B,MAAMC,OAC7B7B,KAAK6D,SAAS,CACZL,QAASrC,qCAKX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,gBAGFH,EAAAC,EAAAC,cAACwE,EAAD,CAAO5E,QAASD,KAAKC,UACrBE,EAAAC,EAAAC,cAACyE,EAAD,CAAa3D,MAAOnB,KAAKuD,MAAMC,UAC/BrD,EAAAC,EAAAC,cAAC0E,EAAD,CAAMnD,MAAO5B,KAAKuD,MAAM3B,MAAON,cAAetB,KAAKsB,gBACnDnB,EAAAC,EAAAC,cAAC2E,EAAD,CAAS9C,WAAYlC,KAAKkC,WAAYL,OAAQ7B,KAAKuD,MAAM3B,MAAMC,OAAQM,YAAanC,KAAKmC,cACzFhC,EAAAC,EAAAC,cAAC4E,EAAD,CAAS5C,YAAarC,KAAKuD,MAAMlB,YAAaC,YAAatC,KAAKuD,MAAMjB,uBApK9DtB,aCEEkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7af55c15.chunk.js","sourcesContent":["import React from 'react';\n\nclass Input extends React.Component {\n\n    render(){\n        let { addItem } = this.props;\n        return(\n            <div className=\"row\">\n                <form className=\"form-inline Form\" onSubmit={(e) => {addItem(e, this.newItem.value); this.newItem.value = \"\"} } >\n                    <div className=\"form-group Input-wrapper\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Add an item...\" ref={input => this.newItem = input}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary Input-button\">Add item</button>\n                </form>\n            </div>\n        );\n    }\n} \n\nexport default Input;","import React from 'react';\n\nconst BasketTotal = ({total}) => {\n    return(\n        <div className=\"row\">\n            <div className=\"col Item-total\"><h5>Items in basket: {total}</h5></div>\n        </div>\n    );\n}\n\nexport default BasketTotal;","import React from 'react';\n\nconst ListItem = ({item, alterQuantity, value}) => {\n\n    return(\n        <div className=\"row ListItem\">\n            <div className=\"col ListWrapper\">\n            <h4 className=\"ListText\">{Object.keys(item)}</h4>\n                <div className=\"ButtonWrapper\">\n                    <button className=\"btn btn-success ListButton\" \n                        onClick={() => alterQuantity(value, \"increase\")}><p>+</p></button>\n                    <div className=\"ItemTotal\">{Object.values(item)}</div>\n                    <button className=\"btn btn-danger ListButton\"\n                        onClick={() => alterQuantity(value, \"decrease\")}><p>-</p></button>\n                    <button className=\"btn btn-warning ListButton\"\n                        onClick={() => alterQuantity(value, \"clear\")}><p>x</p></button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem';\n\nconst List = ({items, alterQuantity}) => {\n    \n    if(items.length >= 1){\n        return(\n            items.map((item) => {\n                return <ListItem \n                    key={Object.keys(item)[0]}\n                    item={item} \n                    alterQuantity={alterQuantity}\n                    value={Object.keys(item)[0]}/>\n            })\n        )\n    } else {\n        return(\n            <div className=\"row ListItem EmptyRow\">\n                <h5 className=\"EmptyText\">Add something to your list!</h5>\n            </div>\n        )\n    }\n}\n\nexport default List;","import React from 'react';\n\nconst Buttons = ({placeOrder, length, clearBasket}) => {\n    return(\n        <div className=\"row\">\n            <div className=\"col SendButton\">\n              <button className=\"btn btn-dark btn-lg\"\n                onClick={() => placeOrder(length)}>Send Order!</button>\n                <button className=\"btn btn-danger btn-lg button\"\n                onClick={() => clearBasket()}>Clear</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Buttons;","import React from 'react';\n\nconst Success = ({orderPlaced, orderFailed}) => {\n    if(orderPlaced === true){\n        return(\n            <div className=\"wrapper\">\n                <h4 className=\"Success-text\">Your order was a success! Please see the console.</h4>\n            </div>\n        )\n    } else if(orderFailed === true) {\n        return(\n            <div className=\"wrapper\">\n                <h4 className=\"NotSuccess-text\">Your order order failed. Please check console.</h4>\n            </div>\n        )\n    } else {\n        return(\n            <div></div>\n        )\n    }\n}\n\nexport default Success;","/**\n * \n * @param {string} - Capitalizes only first letter in a string.\n * \n */\n\nexport function capitalFirstLetter(str) {\n    return `${str.toLowerCase().split(\"\")[0].toUpperCase()}${str.slice(1).toLowerCase()}`\n}\n\n/**\n * \n * @param {number} - Returns either unit or units depending on amount.\n * \n */\n\n export function pluraliseUnit(number, item) {\n    return number > 1 ? ` - ${number} units of ${item}\n` : ` - ${number} unit of ${item}\n`\n }","import React, { Component } from 'react';\nimport Input from './components/Input/Input';\nimport BasketTotal from './components/List/BasketTotal';\nimport List from './components/List/List';\nimport Buttons from './components/Submit/Buttons';\nimport Success from './components/Submit/Success';\nimport { pluraliseUnit } from './components/helpers/HelperFunc';\nimport { capitalFirstLetter } from './components/helpers/HelperFunc';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      items: [\n        {\"Bread\": 1},\n        {\"Milk\": 2}\n      ],\n      totalNo: 0,\n      orderPlaced: false,\n      orderFailed: false\n    }\n    this.addItem = this.addItem.bind(this);\n    this.printOrder = this.printOrder.bind(this);\n    this.placeOrder = this.placeOrder.bind(this);\n    this.alterQuantity = this.alterQuantity.bind(this);\n    this.clearBasket = this.clearBasket.bind(this);\n  }\n\n  //Add item checks to see if input value already exists - if so, it increments the value by 1\n  // and if not, it creates a new item object.\n  addItem = (e, input) => {\n    e.preventDefault();\n    if(!input){ return; };\n\n    let { items, totalNo } = this.state;\n    let capitalInput = capitalFirstLetter(input);\n\n    for(let i=0; i < items.length; i++){\n      let cloneState = [...items];\n      let item = capitalFirstLetter(Object.keys(items[i])[0]);\n\n      if(capitalInput === item) {\n        cloneState[i][capitalInput] += 1;\n        \n        this.setState({\n          items: cloneState\n        });\n        return;\n      } \n    }\n\n    this.setState({\n      items: [\n        ...this.state.items,\n        {[capitalInput]: 1},\n      ],\n      totalNo: totalNo + 1\n    });\n  }\n\n  // Dependent on what the value of alter is, it will either increment or decrement the value of the item\n  // in the state. If the alter = clear, it will remove the item from the state completely.\n  alterQuantity = (value, alter) => {\n    let { items, totalNo } = this.state;\n    let cloneState = [...items]\n\n    if (alter === \"increase\"){\n      for(let i =0; i < cloneState.length; i++){\n        let item = Object.keys(cloneState[i]).toString();\n  \n        if(item === value){\n          cloneState[i][value] += 1;\n        }\n      }\n\n    } else if (alter === \"decrease\"){\n      for(let i =0; i < cloneState.length; i++){\n        let item = Object.keys(cloneState[i]).toString();\n  \n        if(item === value){\n          cloneState[i][value] -= 1;\n          if (cloneState[i][value] < 1){\n            cloneState.splice(i, 1)\n            this.setState({totalNo: totalNo - 1})\n          }\n        }\n      }\n\n    } else if (alter === \"clear\") {\n      for(let i =0; i < cloneState.length; i++){\n        let item = Object.keys(cloneState[i]).toString();\n  \n        if(item === value) {\n          cloneState.splice(i, 1)\n  \n          this.setState({\n            items: cloneState,\n            totalNo: totalNo - 1\n          })\n        }\n      }\n    }\n\n    this.setState({\n      items: cloneState\n    })\n  }\n\n  printOrder = () => {\n    let { items } = this.state;\n    let listOrder = (items) => {\n    let orderConsole = \"\";\n    \n      for(let i = 0; i < items.length; i++){\n        let number = Object.values(items[i]);\n        let item = Object.keys(items[i]).toString().toLowerCase();\n\n        //Pluralise unit returns correctly formatted string with the correct unit/units used..\n        let literalString = pluraliseUnit(number, item);\n        orderConsole += literalString;\n      }\n      return orderConsole;\n    }\n\n    console.log(\"Thank you for your order. You have ordered:\\n\\n\" + listOrder(items) + \"\\nWe hope you enjoy your shopping!\");\n\n    this.setState({\n      orderPlaced: true\n    })\n  }\n\n  placeOrder = (length) => {\n    setTimeout(() => {\n      if (length > 0) {\n        this.printOrder();\n      } else {\n        console.log(\"You need to have someting in your basket first!\")\n        this.setState({\n          orderFailed: true,\n          orderPlaced: false\n        })\n      }\n    }, 1500)\n  }\n\n  clearBasket = () => {\n    this.setState({\n      items: [],\n      totalNo: 0\n    })\n  }\n\n  componentDidMount() {\n    let total = this.state.items.length;\n    this.setState({\n      totalNo: total\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n\n          <div className=\"row\">\n            <div className=\"col Header\">YOUR BASKET</div>\n          </div>\n\n          <Input addItem={this.addItem}/>\n          <BasketTotal total={this.state.totalNo} />\n          <List items={this.state.items} alterQuantity={this.alterQuantity} />\n          <Buttons placeOrder={this.placeOrder} length={this.state.items.length} clearBasket={this.clearBasket} />\n          <Success orderPlaced={this.state.orderPlaced} orderFailed={this.state.orderFailed} />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}